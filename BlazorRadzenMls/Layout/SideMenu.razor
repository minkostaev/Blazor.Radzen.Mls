@using BlazorRadzenMls.Models

<RadzenPanelMenu DisplayStyle="@__state.MenuStyle" ShowArrow="@__state.MenuArrow" Multiple="@__state.MenuMultiple" >
    <RadzenPanelMenuItem Text="Home" Path="" Image="icon-128.png">

    </RadzenPanelMenuItem>
    <RadzenPanelMenuItem Text="Radzen" Icon="extension">

        <RadzenPanelMenuItem Text="Icons" Path="@AppValues.PageIcons" Icon="perm_media" />
        <RadzenPanelMenuItem Text="Color" Path="color" Icon="perm_media" />
        <RadzenPanelMenuItem Text="Input Files" Path="upload" Icon="perm_media" />

    </RadzenPanelMenuItem>
    <RadzenPanelMenuItem Text="Blazor" Icon="bug_report">
        
        <RadzenPanelMenuItem Text="@__lang["Options"]" Path="@AppValues.PageOptions" Icon="build" />
        
    </RadzenPanelMenuItem>
    <RadzenPanelMenuItem Text="Learn" Icon="extension">

        <RadzenPanelMenuItem Text="Weather" Path="weather" Icon="backup" />
        <RadzenPanelMenuItem Text="Render Fragment" Path="renderfragment" Icon="dashboard" />
        <RadzenPanelMenuItem Text="Dynamic Component" Path="dinamichnite" Icon="done" />
        <RadzenPanelMenuItem Text="Error Boundaries" Path="errorboundaries" Icon="bug_report" />
        <RadzenPanelMenuItem Text="Routing" Path="route" Icon="open_in_browser" />
        <RadzenPanelMenuItem Text="StateHasChanged" Path="shc" Icon="autorenew" />
        <RadzenPanelMenuItem Text="Cascading" Path="cascading" Icon="autorenew" />
        <RadzenPanelMenuItem Text="Local storage" Path="local" Icon="autorenew" />

    </RadzenPanelMenuItem>
    <RadzenPanelMenuItem Text="Api" Icon="http">

        <RadzenPanelMenuItem Text="Random Dog" Path="@AppValues.PageDogs" Icon="gif" />

    </RadzenPanelMenuItem>
</RadzenPanelMenu>

@code {

    protected override void OnInitialized()
    {

        __state.RefreshEvent += delegate { StateHasChanged(); }; //Refresh_Event;
    }
    //private void Refresh_Event(object? sender, EventArgs e) { StateHasChanged(); }

}