@page "/refresh"

@using BlazorRadzenMls.Models
@using System.Timers

<RadzenLabel Text=@_currentVersion class="rz-color-success-dark" Style="font-weight: bold;" />

@if (__state.NeedUpdate)
{
    <RadzenLabel Text=@_updateVersion class="rz-color-danger-dark" Style="font-weight: bold;" />
}

<RadzenButton Text="@_btnLablel" Icon="autorenew"
              ButtonStyle="ButtonStyle.Warning" Click="@__verRe.Reload" />

@code {

    private string _currentVersion => __ml["Current_version_is"] + ": " + AppValues.VersionClient;
    private string _updateVersion => __ml["Update_version_available"] + ": " + __state.VersionServer;
    private string _btnLablel => __state.NeedUpdate ? __ml["Update"] : __ml["Refresh"];

    protected override async void OnInitialized()
    {
        await __verRe.CheckVersion();
        
        __state.RefreshEvent += delegate { StateHasChanged(); }; //Refresh_Event;
    }
    //private void Refresh_Event(object? sender, EventArgs e) { StateHasChanged(); }

}