@using BlazorRadzenMls.Models.TheMachine

<RadzenPanelMenu Multiple="true">

    <RadzenPanelMenuItem Click="() => CopyToClipboard(Item?.Id!)" Text="@id" Icon="fingerprint"></RadzenPanelMenuItem>
    <RadzenPanelMenuItem Click="() => CopyToClipboard(Item?.Hash!)" Text="@hash" Icon="grid_on"></RadzenPanelMenuItem>

    <RadzenPanelMenuItem Text="@client" Icon="account_circle">
        <RadzenPanelMenuItem Visible="false"></RadzenPanelMenuItem>
        <RadzenCard Style="@styl" class="@clas">
            <RadzenRow RowGap="0">
                @* <RdznGrdColTmpt Label="@__lang["User"]" Value="@Item?.Client?.User" /> *@
                <RdznGrdColTmpt Label="@__ml["Machine"]" Value="@Item?.Client?.Machine" />
                <RdznGrdColTmpt Label="@__ml["Domain"]" Value="@Item?.Client?.Domain" />
                <RdznGrdColTmpt Label="@__ml["Path"]" Value="@Item?.Client?.Path" />
            </RadzenRow>
        </RadzenCard>
    </RadzenPanelMenuItem>

    <RadzenPanelMenuItem Text="@version" Icon="markunread_mailbox">
        <RadzenPanelMenuItem Visible="false"></RadzenPanelMenuItem>
        <RadzenCard Style="@styl" class="@clas">
            <RadzenRow RowGap="0">
                <RdznGrdColTmpt Label="@__ml["Description"]" Value="@Item?.Version?.Description" />
                <RdznGrdColTmpt Label="@__ml["Platform"]" Value="@Item?.Version?.Platform" />
                @if (!string.IsNullOrEmpty(Item?.Version?.Pack))
                {
                    <RdznGrdColTmpt Label="@__ml["Pack"]" Value="@Item?.Version?.Pack" />
                }
                <RdznGrdColTmpt Label="@__ml["Build"]" Value="@Item?.Version?.Build?.ToString()" />
                <RdznGrdColTmpt Label="@__ml["Major"]" Value="@Item?.Version?.Major?.ToString()" />
                <RdznGrdColTmpt Label="@__ml["Minor"]" Value="@Item?.Version?.Minor?.ToString()" />
                <RdznGrdColTmpt Label="@__ml["Revision"]" Value="@Item?.Version?.Revision?.ToString()" />
            </RadzenRow>
        </RadzenCard>
    </RadzenPanelMenuItem>

    <RadzenPanelMenuItem Text="@culture" Icon="language">
        <RadzenPanelMenuItem Visible="false"></RadzenPanelMenuItem>
        <RadzenCard Style="@styl" class="@clas">
            <RadzenRow RowGap="0">
                <RdznGrdColTmpt Label="@__ml["Name"]" Value="@Item?.Culture?.Name" />
                <RdznGrdColTmpt Label="@__ml["Description"]" Value="@Item?.Culture?.Description" />
                <RdznGrdColTmpt Label="@__ml["Separator"]" Value="@Item?.Culture?.Separator" />
            </RadzenRow>
        </RadzenCard>
    </RadzenPanelMenuItem>

    <RadzenPanelMenuItem Text="@processor" Icon="card_membership">
        <RadzenPanelMenuItem Visible="false"></RadzenPanelMenuItem>
        <RadzenCard Style="@styl" class="@clas">
            <RadzenRow RowGap="0">
                <RdznGrdColTmpt Label="@__ml["64 bit OS"]" Value="@Item?.Processor?.Os64.ToString()" />
                <RdznGrdColTmpt Label="@__ml["64 bit Process"]" Value="@Item?.Processor?.Process64.ToString()" />
                <RdznGrdColTmpt Label="@__ml["Process Cores"]" Value="@Item?.Processor?.Count.ToString()" />
            </RadzenRow>
        </RadzenCard>
    </RadzenPanelMenuItem>

    <RadzenPanelMenuItem Text="@networks" Icon="dns">
        <RadzenPanelMenuItem Visible="false"></RadzenPanelMenuItem>
        @if (Item != null && Item?.Networks != null)
        {
            foreach (var n in @Item.Networks)
            {
                <RadzenCard Style="@styl" class="@clas">
                    <RadzenRow RowGap="0">
                        <RdznGrdColTmpt Label="@__ml["Id"]" Value="@n.Id" />
                        <RdznGrdColTmpt Label="@__ml["Name"]" Value="@n.Name" />
                        <RdznGrdColTmpt Label="@__ml["Description"]" Value="@n.Description" />
                        <RdznGrdColTmpt Label="@__ml["Type"]" Value="@n.Type" />
                        <RdznGrdColTmpt Label="@__ml["Mac"]" Value="@n.Mac" />
                        <RdznGrdColTmpt Label="@__ml["Ip"]" Value="@n.Ip" />
                    </RadzenRow>
                </RadzenCard>
            }
        }
    </RadzenPanelMenuItem>

    <RadzenPanelMenuItem Text="@variables" Icon="view_list">
        <RadzenPanelMenuItem Visible="false"></RadzenPanelMenuItem>
        <RadzenCard Style="@styl" class="@clas">
            <RadzenRow RowGap="0">
                @if (Item != null && Item?.Variables != null)
                {
                    foreach (var v in @Item.Variables)
                    {
                        <RdznGrdColTmpt Label="@v.Key" Value="@v.Value" />
                    }
                }
            </RadzenRow>
        </RadzenCard>
    </RadzenPanelMenuItem>

</RadzenPanelMenu>

@code {

    [Parameter]
    public MachineDb? Item { get; set; }

    private string styl => "margin-top: -15px;";
    private string clas => "rz-background-color-primary-light";

    private string id => __ml["Id"] + ": " + Item?.Id;
    private string hash => __ml["Hash"] + ": " + Item?.Hash;

    private string client => __ml["Client"] + ": " + __ml["User"] + " - " + Item?.Client?.User;
    private string version => __ml["Version"] + ": " + "Windows " + TheMachine.WindowsBuilds(Item?.Version?.Build.ToString());
    private string culture => __ml["Culture"] + ": " + Item?.Culture?.Description;
    private string processor => __ml["Processor"] + ": " + Item?.Processor?.Count.ToString() + " " + __ml["Cores"];
    private string networks => __ml["Networks"] + ": " + Item?.Networks?.Count.ToString();
    private string variables => __ml["Variables"] + ": " + Item?.Variables?.Count.ToString();

    private async Task CopyToClipboard(string copy)
    {
        bool isCopy = await __js.CopyToClipboard(copy, this, "CopyToClipboard");
        var msg = new NotificationMessage
        {
            Severity = isCopy ? NotificationSeverity.Info : NotificationSeverity.Warning,
            Summary = isCopy ? "Copied to clipboard" : "Error",
            //Detail = isCopy ? "Copied to clipboard" : "Error",
            Duration = 2000
        };
        __notify.Notify(msg);
    }

}