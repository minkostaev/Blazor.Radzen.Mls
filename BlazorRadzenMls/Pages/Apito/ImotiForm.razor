@using BlazorRadzenMls.Models

<RadzenFieldset Text="Imot">
    <RadzenStack Gap="1rem">
        <RadzenRow AlignItems="AlignItems.Center">
            <RadzenColumn Size="12" SizeMD="3">
                <RadzenLabel Text="Label" Component="Label" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="9">
                @if (IsNew)
                {
                    <RadzenTextBox @bind-Value=NewImot!.Label Style="width: 100%;" Name="Label" />
                }
                else
                {
                    @if (SelectedImot != null)
                    {
                        <RadzenTextBox @bind-Value=SelectedImot.Label Style="width: 100%;" Name="Label" />
                    }
                }
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow AlignItems="AlignItems.Center">
            <RadzenColumn Size="12" SizeMD="3">
                <RadzenLabel Text="Location" Component="Location" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="9">
                @if (IsNew)
                {
                    <RadzenTextBox @bind-Value=NewImot!.Location Style="width: 100%;" Name="Location" />
                }
                else
                {
                    @if (SelectedImot != null)
                    {
                        <RadzenTextBox @bind-Value=SelectedImot.Location Style="width: 100%;" Name="Location" />
                    }
                }
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow AlignItems="AlignItems.Center">
            <RadzenColumn Size="12" SizeMD="3">
                <RadzenLabel Text="Type" Component="Type" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="9">
                @if (IsNew)
                {
                    <RadzenTextBox @bind-Value=NewImot!.Type Style="width: 100%;" Name="Type" />
                }
                else
                {
                    @if (SelectedImot != null)
                    {
                        <RadzenTextBox @bind-Value=SelectedImot.Type Style="width: 100%;" Name="Type" />
                    }
                }
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow AlignItems="AlignItems.Center">
            <RadzenColumn Size="12" SizeMD="3">
                <RadzenLabel Text="Agent" Component="Agent" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="9">
                @if (IsNew)
                {
                    <RadzenTextBox @bind-Value=NewImot!.Agent Style="width: 100%;" Name="Agent" />
                }
                else
                {
                    @if (SelectedImot != null)
                    {
                        <RadzenTextBox @bind-Value=SelectedImot.Agent Style="width: 100%;" Name="Agent" />
                    }
                }
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow AlignItems="AlignItems.Center">
            <RadzenColumn Size="12" SizeMD="3">
                <RadzenLabel Text="Link" Component="Link" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="9">
                @if (IsNew)
                {
                    <RadzenTextBox @bind-Value=NewImot!.Link Style="width: 100%;" Name="Link" />
                }
                else
                {
                    @if (SelectedImot != null)
                    {
                        <RadzenTextBox @bind-Value=SelectedImot.Link Style="width: 100%;" Name="Link" />
                    }
                }
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow AlignItems="AlignItems.Center">
            <RadzenColumn Size="12" SizeMD="3">
                <RadzenLabel Text="Pictures" Component="Pictures" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="9">
                @if (IsNew)
                {
                    <RadzenTextBox @bind-Value=NewPictures Style="width: 100%;" Name="Pictures" />
                }
                else
                {
                    @if (SelectedImot != null)
                    {
                        <RadzenTextBox @bind-Value=Pictures Style="width: 100%;" Name="Pictures" />
                    }
                }
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow AlignItems="AlignItems.Center">
            <RadzenColumn Size="12" SizeMD="3">
                <RadzenLabel Text="Price" Component="Price" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="9">
                @if (IsNew)
                {
                    <RadzenNumeric @bind-Value=@NewImot!.Price Name="Price" />
                }
                else
                {
                    @if (SelectedImot != null)
                    {
                        <RadzenNumeric @bind-Value=@SelectedImot.Price Name="Price" />
                    }
                }
            </RadzenColumn>
        </RadzenRow>
        <RadzenRow AlignItems="AlignItems.Center">
            <RadzenColumn Size="12" SizeMD="3">
                <RadzenCheckBox Name="chBxNew" @bind-Value=@IsNew />
                <RadzenLabel Component="chBxNew" Text="New" Style="margin-left: 8px; vertical-align: middle;" />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="9">
                @if (IsNew)
                {
                    <RadzenButton Text="Add" Icon="note_add" Click="() => Btn_Clicked(HttpMethod.Post)" />
                }
                else
                {
                    @* <RadzenButton Text="Close" Icon="highlight_off" Click="@((args) => __dialog.Close(true))" /> *@
                    <RadzenButton Text="Update" Icon="build" Click="() => Btn_Clicked(HttpMethod.Put)" />
                    <RadzenButton Text="Delete" Icon="delete" ButtonStyle="ButtonStyle.Danger"
                                  Click="() => Btn_Clicked(HttpMethod.Delete)" />
                }
            </RadzenColumn>
        </RadzenRow>
    </RadzenStack>
</RadzenFieldset>

@code {

    [Parameter]
    public bool IsNew { get; set; }

    [Parameter]
    public ImotMongo? NewImot { get; set; }

    [Parameter]
    public ImotMongo? SelectedImot { get; set; }

    [Parameter]
    public EventCallback<HttpMethod> Method { get; set; }

    private string? pictures;
    private string? Pictures
    {
        get
        {
            if (SelectedImot == null)
                return null;
            if (SelectedImot.Pictures == null)
                SelectedImot.Pictures = new List<string>().ToArray();
            pictures = string.Join(' ', SelectedImot.Pictures);
            return pictures;
        }
        set
        {
            if (SelectedImot == null)
                return;
            pictures = value;
            SelectedImot.Pictures = pictures?.Split(' ');
        }
    }

    private string? newPictures;
    private string? NewPictures
    {
        get
        {
            if (NewImot == null)
                return null;
            if (NewImot.Pictures == null)
                NewImot.Pictures = new List<string>().ToArray();
            newPictures = string.Join(' ', NewImot.Pictures);
            return newPictures;
        }
        set
        {
            if (NewImot == null)
                return;
            newPictures = value;
            NewImot.Pictures = newPictures?.Split(' ');
        }
    }

    private async Task Btn_Clicked(HttpMethod httpMethod)
    {
        await Method.InvokeAsync(httpMethod);
        __dialog.Close(true);
    }

}