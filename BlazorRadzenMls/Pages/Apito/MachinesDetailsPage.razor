@attribute [Route(AppValues.PageMachinesDetails)]

@attribute [Authorize]

@using BlazorRadzenMls.Models
@using Forms.Wpf.Mls.Tools.Models.TheMachine

@inject IApito _apito

<RadzenText Text="@__lang["Machines Details"]" TextStyle="TextStyle.H4" class="rz-color-primary" />

@if (dataLogs != null)
{
    <RadzenDataGrid Data="@dataLogs" TItem="Machine" @bind-Value="selectedLogs"
                    PageSize="10" AllowPaging="true" AllowSorting="true"
                    PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                    AllowFiltering="true" FilterMode="FilterMode.Advanced"
                    SelectionMode="DataGridSelectionMode.Multiple">
        <HeaderTemplate>
            @* <RadzenButton Text="Reload" Icon="autorenew" Click="() => Clear(true)"
                          ButtonStyle="ButtonStyle.Info" />
            <RadzenButton Text="Delete" Icon="delete_forever" Click="@DeleteLogs" IsBusy="@busyDelete"
                          ButtonStyle="ButtonStyle.Danger" Disabled="@disabledDelete" />
            <RadzenSplitButton Text="@clearBtnText" Disabled="@disabledDelete" Click="() => Clear()"
                               Icon="cached" ButtonStyle="ButtonStyle.Info">
                <ChildContent>
                    @if (selectedLogs != null)
                    {
                        <div style="width: 266px; max-height: 366px; overflow: auto; padding: 10px;">
                            @foreach (var itm in selectedLogs)
                            {
                                <RadzenText TextStyle="TextStyle.Body2"
                                            Style="display: flex; white-space: nowrap; text-overflow: ellipsis;">
                                    @SelectLabel(@itm.Value!)
                                    <RadzenIcon Icon="done" IconColor="var(--rz-dropdown-open-background-color)" />
                                </RadzenText>
                            }
                        </div>
                    }
                </ChildContent>
            </RadzenSplitButton> *@
        </HeaderTemplate>
        <Template Context="logs">
            <RadzenCard Style="margin-bottom:20px">
                Company: <b>@logs.Hash</b>
            </RadzenCard>
        </Template>
        <Columns>
            <RadzenDataGridColumn Property="Client.User" Title="User" />
            <RadzenDataGridColumn Property="Client.Machine" Title="Machine" />
            <RadzenDataGridColumn Property="Client.Domain" Title="Desktop" />
            <RadzenDataGridColumn Property="Client.Path" Title="Path" />
        </Columns>
    </RadzenDataGrid>
}
else
{
    <div class="loader">Loading...</div>
}

@code {

    private Machine[]? dataLogs;
    private IList<Machine>? selectedLogs;

    protected override async Task OnInitializedAsync()
    {
        dataLogs = await _apito.GetMachinesDetails();
    }

}
